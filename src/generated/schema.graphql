### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Case {
  client: Client!
  clientId: String!
  createdAt: DateTime!
  id: String!
  professional: Professional!
  professionalId: String!
  server: UnitServer!
  serverId: String!
  status: String!
  updatedAt: DateTime!
}

type Client {
  cases: [Case!]!
  id: String!
  server: UnitServer!
  serverId: String!
  status: String!
  user: User!
  userId: String!
}

type Constellation {
  description: String!
  id: String!
  name: String!
  servers: [UnitServer!]!
}

"""DateTime custom scalar type"""
scalar DateTime

"""JSON custom scalar type"""
scalar JSON

type Mutation {
  createCase(clientId: String!, professionalId: String, serverId: String!, status: String): Case!
  createClient(serverId: String!, status: String, userId: String!): Client!
  createConstellation(description: String, name: String!): Constellation!
  createProfessional(serverId: String!, userId: String!): Professional!
  createUnitServer(constellationId: String, domain: String!, name: String!): UnitServer!
  createUser(address: String, email: String!, firstName: String, lastName: String, phone: String, role: String): User!
  updateCase(id: String!, professionalId: String, status: String): Case!
  updateClient(id: String!, status: String): Client!
  updateConstellation(description: String, id: String!, name: String): Constellation!
  updateUnitServer(activeConfigId: String, constellationId: String, domain: String, id: String!, name: String, requiresUpdate: Boolean): UnitServer!
  updateUser(address: String, email: String, firstName: String, id: String!, isActive: Boolean, lastName: String, phone: String, role: String): User!
}

type Professional {
  cases: [Case!]!
  id: String!
  server: UnitServer!
  serverId: String!
  user: User!
  userId: String!
}

type Query {
  case(id: String!): Case!
  cases(clientId: String, professionalId: String, status: String): [Case!]!
  client(id: String!): Client!
  clients(serverId: String): [Client!]!
  constellation(id: String!): Constellation!
  constellations: [Constellation!]!
  professional(id: String!): Professional!
  professionals(serverId: String): [Professional!]!
  unitConfig(id: String!): UnitConfig!
  unitConfigs: [UnitConfig!]!
  unitServer(id: String!): UnitServer!
  unitServers: [UnitServer!]!
  user(id: String!): User!
  users: [User!]!
}

type Section {
  config: UnitConfig!
  configId: String!
  content: String!
  id: String!
  order: Int!
  server: UnitServer!
  serverId: String!
  title: String!
  type: String!
}

type UnitConfig {
  activeInServers: [UnitServer!]!
  createdAt: DateTime!
  externalLinks: JSON!
  footerInfo: String!
  id: String!
  infoSections: JSON!
  legalStepsCount: Int!
  name: String!
  newsParams: JSON!
  pageTitle: String!
  pageType: String!
  sections: [Section!]!
  selectedNews: JSON!
  updatedAt: DateTime!
}

type UnitServer {
  activeConfig: UnitConfig!
  activeConfigId: String!
  constellation: Constellation!
  constellationId: String!
  domain: String!
  id: String!
  name: String!
  orchestratorToken: String!
  requiresUpdate: Boolean!
  unitToken: String!
}

type User {
  address: String!
  avatarUrl: String!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: String!
  isActive: Boolean!
  lastLoginAt: DateTime!
  lastName: String!
  phone: String!
  role: String!
  updatedAt: DateTime!
}